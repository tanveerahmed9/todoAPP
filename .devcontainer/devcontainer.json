{
  "name": "Todo App .NET Core",
  "image": "mcr.microsoft.com/devcontainers/dotnet:8.0",
  
  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/azure-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [5000, 5001],

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "ms-dotnettools.csharp",
        "ms-dotnettools.csdevkit",
        "ms-vscode.vscode-json",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.powershell",
        "ms-azuretools.vscode-azureappservice",
        "ms-azuretools.vscode-docker",
        "github.copilot",
        "github.copilot-chat",
        "ms-vscode.test-adapter-converter",
        "formulahendry.dotnet-test-explorer"
      ],
      
      // Set default settings
      "settings": {
        "dotnet.defaultSolution": "disable",
        "omnisharp.enableEditorConfigSupport": true,
        "omnisharp.enableRoslynAnalyzers": true,
        "files.exclude": {
          "**/bin": true,
          "**/obj": true
        }
      }
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "dotnet --version && echo 'DevContainer setup complete!'",

  // Use 'postStartCommand' to run commands after the container starts.
  // "postStartCommand": "",

  // Use 'postAttachCommand' to run commands when attaching to the container.
  // "postAttachCommand": "",

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"

  // Set environment variables
  "containerEnv": {
    "ASPNETCORE_ENVIRONMENT": "Development",
    "DOTNET_USE_POLLING_FILE_WATCHER": "true",
    "NUGET_XMLDOC_MODE": "skip"
  },

  // Mount the local Docker socket if you need Docker commands to work
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Add capability for debugging
  "capAdd": [
    "SYS_PTRACE"
  ],

  // Set security options for debugging
  "securityOpt": [
    "seccomp:unconfined"
  ]
}
